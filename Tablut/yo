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





GameState(to_move='w', utility=0, board=array([[0, 0, 0, 1, 1, 1, 0, 0, 0],
       [0, 0, 0, 0, 1, 0, 0, 0, 0],
       [0, 0, 0, 0, 2, 0, 0, 0, 0],
       [1, 0, 0, 0, 2, 0, 0, 0, 1],
       [1, 1, 2, 2, 3, 2, 2, 1, 1],
       [1, 0, 0, 0, 2, 0, 0, 0, 1],
       [0, 0, 0, 0, 2, 0, 0, 0, 0],
       [0, 0, 0, 0, 1, 0, 0, 0, 0],
       [0, 0, 0, 1, 1, 1, 0, 0, 0]]), moves=[((2, 4), (2, 3)), ((2, 4), (2, 2)), ((2, 4), (2, 1)), ((2, 4), (2, 0)), ((2, 4), (2, 5)), ((2, 4), (2, 6)), ((2, 4), (2, 7)), ((2, 4), (2, 8)), ((3, 4), (3, 3)), ((3, 4), (3, 2)), ((3, 4), (3, 1)), ((3, 4), (3, 5)), ((3, 4), (3, 6)), ((3, 4), (3, 7)), ((4, 2), (3, 2)), ((4, 2), (2, 2)), ((4, 2), (1, 2)), ((4, 2), (0, 2)), ((4, 2), (5, 2)), ((4, 2), (6, 2)), ((4, 2), (7, 2)), ((4, 2), (8, 2)), ((4, 3), (3, 3)), ((4, 3), (2, 3)), ((4, 3), (1, 3)), ((4, 3), (5, 3)), ((4, 3), (6, 3)), ((4, 3), (7, 3)), ((4, 5), (3, 5)), ((4, 5), (2, 5)), ((4, 5), (1, 5)), ((4, 5), (5, 5)), ((4, 5), (6, 5)), ((4, 5), (7, 5)), ((4, 6), (3, 6)), ((4, 6), (2, 6)), ((4, 6), (1, 6)), ((4, 6), (0, 6)), ((4, 6), (5, 6)), ((4, 6), (6, 6)), ((4, 6), (7, 6)), ((4, 6), (8, 6)), ((5, 4), (5, 3)), ((5, 4), (5, 2)), ((5, 4), (5, 1)), ((5, 4), (5, 5)), ((5, 4), (5, 6)), ((5, 4), (5, 7)), ((6, 4), (6, 3)), ((6, 4), (6, 2)), ((6, 4), (6, 1)), ((6, 4), (6, 0)), ((6, 4), (6, 5)), ((6, 4), (6, 6)), ((6, 4), (6, 7)), ((6, 4), (6, 8))])






GameState(to_move='w', utility=-77, board=array([[0, 1, 0, 0, 0, 0, 0, 1, 0],
       [0, 0, 0, 0, 0, 0, 1, 1, 0],
       [0, 0, 0, 2, 0, 0, 0, 1, 0],
       [0, 0, 0, 0, 2, 0, 0, 0, 1],
       [1, 1, 2, 2, 3, 2, 2, 0, 1],
       [0, 1, 0, 0, 2, 0, 0, 0, 0],
       [0, 0, 0, 0, 2, 0, 0, 0, 0],
       [1, 0, 0, 0, 0, 0, 0, 0, 1],
       [1, 0, 0, 0, 1, 1, 0, 0, 0]]), moves=[((2, 3), (1, 3)), ((2, 3), (3, 3)), ((2, 3), (2, 2)), ((2, 3), (2, 1)), ((2, 3), (2, 0)), ((2, 3), (2, 4)), ((2, 3), (2, 5)), ((2, 3), (2, 6)), ((3, 4), (2, 4)), ((3, 4), (3, 3)), ((3, 4), (3, 2)), ((3, 4), (3, 1)), ((3, 4), (3, 5)), ((3, 4), (3, 6)), ((3, 4), (3, 7)), ((4, 2), (3, 2)), ((4, 2), (2, 2)), ((4, 2), (1, 2)), ((4, 2), (0, 2)), ((4, 2), (5, 2)), ((4, 2), (6, 2)), ((4, 2), (7, 2)), ((4, 2), (8, 2)), ((4, 3), (3, 3)), ((4, 3), (5, 3)), ((4, 3), (6, 3)), ((4, 3), (7, 3)), ((4, 5), (3, 5)), ((4, 5), (2, 5)), ((4, 5), (1, 5)), ((4, 5), (5, 5)), ((4, 5), (6, 5)), ((4, 5), (7, 5)), ((4, 6), (3, 6)), ((4, 6), (2, 6)), ((4, 6), (5, 6)), ((4, 6), (6, 6)), ((4, 6), (7, 6)), ((4, 6), (8, 6)), ((5, 4), (5, 3)), ((5, 4), (5, 2)), ((5, 4), (5, 5)), ((5, 4), (5, 6)), ((5, 4), (5, 7)), ((6, 4), (6, 3)), ((6, 4), (6, 2)), ((6, 4), (6, 1)), ((6, 4), (6, 0)), ((6, 4), (6, 5)), ((6, 4), (6, 6)), ((6, 4), (6, 7)), ((6, 4), (6, 8))]) ********** <TablutGame> ********** None ********** ((2, 3), (1, 3))
GameState(to_move='b', utility=81, board=array([[0, 1, 0, 0, 0, 0, 0, 1, 0],
       [0, 0, 0, 2, 0, 0, 1, 1, 0],
       [0, 0, 0, 0, 0, 0, 0, 1, 0],
       [0, 0, 0, 0, 2, 0, 0, 0, 1],
       [1, 1, 2, 2, 3, 2, 2, 0, 1],
       [0, 1, 0, 0, 2, 0, 0, 0, 0],
       [0, 0, 0, 0, 2, 0, 0, 0, 0],
       [1, 0, 0, 0, 0, 0, 0, 0, 1],
       [1, 0, 0, 0, 1, 1, 0, 0, 0]]), moves=[((0, 1), (1, 1)), ((0, 1), (2, 1)), ((0, 1), (3, 1)), ((0, 1), (0, 0)), ((0, 1), (0, 2)), ((0, 7), (0, 6)), ((0, 7), (0, 8)), ((1, 6), (0, 6)), ((1, 6), (2, 6)), ((1, 6), (3, 6)), ((1, 6), (1, 5)), ((1, 7), (1, 8)), ((2, 7), (3, 7)), ((2, 7), (2, 6)), ((2, 7), (2, 5)), ((2, 7), (2, 4)), ((2, 7), (2, 3)), ((2, 7), (2, 2)), ((2, 7), (2, 1)), ((2, 7), (2, 0)), ((2, 7), (2, 8)), ((3, 8), (2, 8)), ((3, 8), (1, 8)), ((3, 8), (0, 8)), ((3, 8), (3, 7)), ((3, 8), (3, 6)), ((3, 8), (3, 5)), ((4, 0), (3, 0)), ((4, 0), (2, 0)), ((4, 0), (1, 0)), ((4, 0), (0, 0)), ((4, 0), (5, 0)), ((4, 0), (6, 0)), ((4, 1), (3, 1)), ((4, 1), (2, 1)), ((4, 1), (1, 1)), ((4, 8), (5, 8)), ((4, 8), (6, 8)), ((4, 8), (4, 7)), ((5, 1), (6, 1)), ((5, 1), (7, 1)), ((5, 1), (8, 1)), ((5, 1), (5, 2)), ((5, 1), (5, 3)), ((7, 0), (6, 0)), ((7, 0), (7, 1)), ((7, 0), (7, 2)), ((7, 0), (7, 3)), ((7, 8), (6, 8)), ((7, 8), (8, 8)), ((7, 8), (7, 7)), ((7, 8), (7, 6)), ((7, 8), (7, 5)), ((8, 0), (8, 1)), ((8, 0), (8, 2)), ((8, 4), (7, 4)), ((8, 4), (8, 3)), ((8, 4), (8, 2)), ((8, 4), (8, 1)), ((8, 5), (7, 5)), ((8, 5), (6, 5)), ((8, 5), (5, 5)), ((8, 5), (8, 6)), ((8, 5), (8, 7)), ((8, 5), (8, 8))]) ********** <TablutGame> ********** None ********** ((0, 1), (1, 1))







B
     [java] Stato:
     [java] BOBOBOOBB
     [java] OOOWOBBOO
     [java] OOOOOOOOO
     [java] OBOOOOOOO
     [java] BOWWKWWOO
     [java] OOOOWOOOO
     [java] OOOOWOOOO
     [java] BOOOOOOOB
     [java] OBOBBOBBO
     [java] -
     [java] W
     [java] Waiting for W...
     [java] Nov 24, 2022 8:49:39 PM it.unibo.ai.didattica.competition.tablut.domain.GameAshtonTablut checkMove
     [java] WARNING: Giocatore W cerca di muovere una pedina avversaria
     [java] it.unibo.ai.didattica.competition.tablut.exceptions.PawnException: The player is tryng to move a wrong pawn: Turn: W Pawn from a1 to a2
     [java] 	at it.unibo.ai.didattica.competition.tablut.domain.GameAshtonTablut.checkMove(Unknown Source)
     [java] 	at it.unibo.ai.didattica.competition.tablut.server.Server.run(Unknown Source)
     [java] 	at it.unibo.ai.didattica.competition.tablut.server.Server.main(Unknown Source)
     [java] Nov 24, 2022 8:49:39 PM it.unibo.ai.didattica.competition.tablut.server.Server run
     [java] WARNING: Chiusura sistema per troppi errori giocatore bianco
     [java] Suggested move: Turn: W Pawn from a1 to a2
     [java] TOO MANY ERRORS FOR WHITE PLAYER; PLAYER BLACK WIN!
     [java] END OF THE GAME
     [java] RESULT: PLAYER BLACK WIN
	[[0, 0, 0, 0, 1, 1, 0, 0, 0],
       [0, 0, 0, 1, 1, 0, 0, 0, 0],
       [0, 0, 0, 0, 2, 0, 0, 0, 0],
       [1, 0, 2, 0, 0, 0, 0, 0, 1],
       [1, 1, 2, 2, 3, 2, 2, 1, 1],
       [1, 0, 0, 0, 2, 0, 0, 0, 1],
       [0, 0, 0, 0, 2, 0, 0, 0, 0],
       [0, 0, 0, 0, 1, 0, 0, 0, 0],
       [0, 0, 0, 1, 1, 1, 0, 0, 0]]





Stato:
            ABCDEFGHI
     [java] OOOOOOOOW
     [java] BOOOOBOOO
     [java] BOOOOOOBO
     [java] OOOOOOOOO
     [java] BBWKTOOOB
     [java] OOOOWWOOB
     [java] OOOWWOOOO
     [java] OOBOBOOOO
     [java] OOOBBBOOO

